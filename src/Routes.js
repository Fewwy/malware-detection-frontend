import React, { Suspense, lazy } from 'react';
import { Redirect, Route, Switch } from 'react-router-dom';

import { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye';
import { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner';

const SigRoutes = lazy(() => import(/* webpackChunkName: "Signatures" */ './Routes/Signatures/Routes'));
const SysRoutes = lazy(() => import(/* webpackChunkName: "Systems" */ './Routes/Systems/Routes'));
const Oops = lazy(() => import(/* webpackChunkName: 'Oops' */ './Routes/OopsPage/OopsPage'));
const Noperms = lazy(() => import(/* webpackChunkName: 'Noperms' */ './Routes/NoPermissionsPage/NoPermissionsPage'));

const paths = [
    { title: 'Signatures', path: '/signatures:?', component: SigRoutes },
    { title: 'Signatures', path: '/signatures', component: SigRoutes },
    { title: 'Systems', path: '/systems:?', component: SysRoutes },
    { title: 'Systems', path: '/systems', component: SysRoutes },
    { title: 'Oops', path: '/oops', component: Oops },
    { title: 'Nopermisssions', path: '/nppermissions', component: Noperms }

];

export const Routes = () => (
    <Suspense
        fallback={
            <Bullseye>
                <Spinner size="xl" />
            </Bullseye>
        }
    >
        <Switch>
            {paths.map((path) => (
                <Route
                    key={path.title}
                    path={path.path}
                    component={path.component}
                    rootClass={path.rootClass}
                />
            ))}
            <Redirect path="/signatures" to={`${paths[1].path}`} push />
            {/* Finally, catch all unmatched routes */}
            <Redirect path="*" to={`${paths[1].path}`} push />
        </Switch>
    </Suspense>
);
